# Variables definition
variable "ec2_name" {
  description = "Name of EC2 Instance"
  default     = ""
  type        = string
}

variable "instance_type" {
  description = "Type of EC2 Instance"
  default     = "t2.micro"
  type        = string
}

variable "aws_region" {
  description = "Region on which the infra is being deployed"
  default     = "ap-southeast-1"
  type        = string
}

variable "elb_name" {
  description = "The name of the Elastic Load Balancer (ELB). If not specified, a name will be auto-generated by AWS. The name must be unique within the region."
  default     = ""
  type        = string
}

variable "availability_zones" {
  description = "A list of Availability Zones within the specified region where the ELB will be deployed. These zones should have the resources to host the load balancer's backend instances."
  default     = ["ap-southeast-1a"]
  type        = list(string)
}

variable "instance_port" {
  description = "The port on which the instances behind the load balancer are listening. This is the port that the ELB will forward requests to."
  default     = 8000
  type        = number
}

variable "instance_protocol" {
  description = "The protocol used by the backend instances to accept traffic from the ELB. Valid values are HTTP, HTTPS, TCP, and SSL."
  default     = "http"
  type        = string
}

variable "lb_port" {
  description = "The port on which the load balancer is listening for incoming traffic from clients. This is the port that clients use to connect to the ELB."
  default     = 80
  type        = number
}

variable "lb_protocol" {
  description = "The protocol used by the load balancer to listen for incoming traffic from clients. Valid values are HTTP, HTTPS, TCP, and SSL."
  default     = "http"
  type        = string
}

variable "healthy_threshold" {
  description = "The number of consecutive successful health checks required for an instance to be considered healthy by the load balancer."
  default     = 2
  type        = number
}

variable "unhealthy_threshold" {
  description = "The number of consecutive failed health checks required for an instance to be considered unhealthy by the load balancer."
  default     = 2
  type        = number
}

variable "health_check_timeout" {
  description = "The amount of time, in seconds, during which no response means a failed health check. This value should be less than the interval between health checks."
  default     = 3
  type        = number
}

variable "target" {
  description = "The protocol, port, and path that the load balancer uses to perform health checks on the registered targets (e.g., HTTP:8000/). The format should be 'PROTOCOL:PORT/PATH'."
  type        = string
}

variable "interval" {
  description = "The time interval, in seconds, between health checks for each target. Determines how often the load balancer checks the health of the registered targets."
  type        = number
  default     = 30
}

variable "cross_zone_load_balancing" {
  description = "Enable or disable cross-zone load balancing. When enabled, the load balancer distributes traffic evenly across all registered instances in all enabled Availability Zones."
  type        = bool
  default     = true
}

variable "idle_timeout" {
  description = "The amount of time, in seconds, that the connection is allowed to be idle before being closed by the load balancer. Suitable for applications with longer-running requests."
  type        = number
  default     = 400
}

variable "connection_draining" {
  description = "Enable or disable connection draining. When enabled, the load balancer allows existing connections to complete before deregistering instances or shutting down."
  type        = bool
  default     = true
}

variable "connection_draining_timeout" {
  description = "The maximum amount of time, in seconds, to allow existing connections to complete before deregistering an instance when connection draining is enabled."
  type        = number
  default     = 400
}
